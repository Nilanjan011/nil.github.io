version: '3.8'

services:
  # Node.js App
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: node-app
    container_name: node-app
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    command: node backend/index.js
    networks:
      - app-network

  # React Frontend via Nginx
  webserver:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "3001:80"  # ðŸ‘‰ Serve frontend on localhost:3001
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend:/usr/share/nginx/html:ro  # ðŸ‘‰ React build folder
    networks:
      - app-network

  # Optional: MySQL
  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: mydb
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  # Optional: phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:

volumes:
  dbdata:
